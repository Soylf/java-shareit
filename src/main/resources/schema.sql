CREATE TABLE IF NOT EXISTS users (
      id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
      name VARCHAR(255) NOT NULL,
      email VARCHAR(512) NOT NULL,
      CONSTRAINT pk_user PRIMARY KEY (id),
      CONSTRAINT UQ_USER_EMAIL UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        name VARCHAR(255) NOT NULL,
        description VARCHAR(512) NOT NULL,
        is_available BOOLEAN DEFAULT NULL,
        owner_id BIGINT NOT NULL,
        last_booking_date TIMESTAMP WITH TIME ZONE NOT NULL,
        next_booking_date TIMESTAMP WITH TIME ZONE NOT NULL,
        CONSTRAINT pk_item PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS bookings (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        start_date TIMESTAMP WITH TIME ZONE NOT NULL,
        end_date TIMESTAMP WITH TIME ZONE NOT NULL,
        item_id BIGINT NOT NULL,
        booker_id BIGINT NOT NULL,
        status VARCHAR(25),
        CONSTRAINT pk_booking PRIMARY KEY (id),
        CONSTRAINT fk_bookings_to_items FOREIGN KEY(item_id) REFERENCES items(id) ON DELETE CASCADE,
        CONSTRAINT fk_bookings_to_users FOREIGN KEY(booker_id) REFERENCES users(id) ON DELETE CASCADE,
        CONSTRAINT check_bookings_status CHECK (status::text IN ('WAITING', 'APPROVED', 'REJECTED', 'CANCELED'))
);
CREATE TABLE IF NOT EXISTS comments (
        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
        text VARCHAR(512) NOT NULL,
        item_id BIGINT NOT NULL,
        author_id BIGINT NOT NULL,
        created TIMESTAMP WITH TIME ZONE NOT NULL,
        CONSTRAINT pk_comment PRIMARY KEY (id),
        CONSTRAINT fk_comments_to_items FOREIGN KEY(item_id) REFERENCES items(id) ON DELETE CASCADE,
        CONSTRAINT fk_comments_to_users FOREIGN KEY(author_id) REFERENCES users(id) ON DELETE CASCADE
);